{"version":3,"sources":["NewGrid.jsx","ExapmleLayout.jsx","Grid.jsx","App.js","index.js"],"names":["ResponsiveReactGridLayout","WidthProvider","Responsive","ShowcaseLayout","props","useState","currentBreakpoint","setCurrentBreakpoint","compactType","mounted","setMounted","lg","x","y","w","h","i","static","layouts","React","useEffect","cols","_","capitalize","onBreakpointChange","breakpoint","measureBeforeMount","useCSSTransforms","preventCollision","map","l","className","title","defaultProps","rowHeight","onLayoutChange","md","sm","xs","xxs","ExampleLayout","layout","setLayout","useCallback","App","gridProps","window","rootElement","document","getElementById","createRoot","render"],"mappings":"oOAGMA,EAA4BC,wBAAcC,cAE1CC,EAAiB,SAACC,GACtB,MAAkDC,mBAAS,MAAK,mBAAzDC,EAAiB,KAAEC,EAAoB,KAC9C,EAAsCF,mBAAS,YAAW,mBAAnDG,EAAW,KAClB,GADkC,KACJH,oBAAS,IAAM,mBAAtCI,EAAO,KAAEC,EAAU,KAC1B,EAA8BL,mBAAS,CACrCM,GAAI,CACF,CACEC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IACHC,QAAQ,GAEV,CACEL,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,IACHC,QAAQ,MAGZ,mBAnBKC,EAAO,KAAY,KAgD1B,OAJAC,IAAMC,WAAU,WACdV,GAAW,EACb,GAAG,IAGD,gCACE,gCAAK,uBACkBJ,EAAkB,KAAGF,EAAMiB,KAAKf,GAAoB,IAAI,cAG/E,gCAAK,oBAAkBgB,IAAEC,WAAWf,IAAgB,mBACpD,cAACR,EAAyB,2BACpBI,GAAK,IACTc,QAASA,EACTM,mBAlBqB,SAACC,GAC1BlB,EAAqBkB,EACvB,EAiBMC,oBAAoB,EACpBC,iBAAkBlB,EAClBD,YAAaA,EACboB,kBAAmBpB,EAAY,SAxC5BU,EAAQP,GAAGkB,KAAI,SAACC,EAAGd,GACxB,OACE,qBAAae,UAAWD,EAAEb,OAAS,SAAW,GAAG,SAC9Ca,EAAEb,OACD,uBACEc,UAAU,OACVC,MAAM,wDAAuD,UAC9D,YACWhB,KAGZ,sBAAMe,UAAU,OAAM,SAAEf,KATlBA,EAad,SA+BJ,EAEAb,EAAe8B,aAAe,CAC5BF,UAAW,SACXG,UAAW,GACXC,eAAgB,WAAO,EACvBd,KAAM,CAAEV,GAAI,GAAIyB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAK,IAG9BpC,QCvDAqC,EA5BO,WACpB,MAA4BnC,mBAAS,IAAG,mBAAjCoC,EAAM,KAAEC,EAAS,KAElBP,EAAiBQ,uBAAY,SAACF,GAClCC,EAAUD,EACZ,GAAG,IAYH,OACE,gCACE,sBAAKV,UAAU,aAAY,UAAC,gBACb,+BAAM,iBAAmB,IACtC,qBAAKA,UAAU,UAAS,SAbrBU,EAAOZ,KAAI,SAAUC,GAC1B,OACE,sBAAKC,UAAU,aAAY,UACzB,4BAAID,EAAEd,IAAM,MAAIc,EAAElB,EAAE,KAAGkB,EAAEjB,EAAE,KAAGiB,EAAEhB,EAAE,KAAGgB,EAAEf,EAAE,MADVe,EAAEd,EAIvC,SASE,cAAC,EAAc,CAACmB,eAAgBA,MAGtC,E,WCzB6BlC,wBAAcC,c,MCC5B,SAAS0C,IACtB,IAAMC,EAAYC,OAAOD,WAAa,CAAC,EAEvC,OACE,qBAAKd,UAAU,MAAK,SAClB,cAAC,EAAa,eAAKc,KAGzB,CCRA,IAAME,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACP,EAAG,M","file":"static/js/main.f758def2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nconst ShowcaseLayout = (props) => {\r\n  const [currentBreakpoint, setCurrentBreakpoint] = useState(\"lg\");\r\n  const [compactType, setCompactType] = useState(\"vertical\");\r\n  const [mounted, setMounted] = useState(false);\r\n  const [layouts, setLayouts] = useState({\r\n    lg: [\r\n      {\r\n        x: 0,\r\n        y: 0,\r\n        w: 1,\r\n        h: 1,\r\n        i: \"0\",\r\n        static: false\r\n      },\r\n      {\r\n        x: 4,\r\n        y: 5,\r\n        w: 3,\r\n        h: 2,\r\n        i: \"1\",\r\n        static: false\r\n      }\r\n    ]\r\n  });\r\n\r\n  const generateDOM = () => {\r\n    return layouts.lg.map((l, i) => {\r\n      return (\r\n        <div key={i} className={l.static ? \"static\" : \"\"}>\r\n          {l.static ? (\r\n            <span\r\n              className=\"text\"\r\n              title=\"This item is static and cannot be removed or resized.\"\r\n            >\r\n              Static - {i}\r\n            </span>\r\n          ) : (\r\n            <span className=\"text\">{i}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const onBreakpointChange = (breakpoint) => {\r\n    setCurrentBreakpoint(breakpoint);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Current Breakpoint: {currentBreakpoint} ({props.cols[currentBreakpoint]}{\" \"}\r\n        columns)\r\n      </div>\r\n      <div>Compaction type: {_.capitalize(compactType) || \"No Compaction\"}</div>\r\n      <ResponsiveReactGridLayout\r\n        {...props}\r\n        layouts={layouts}\r\n        onBreakpointChange={onBreakpointChange}\r\n        measureBeforeMount={false}\r\n        useCSSTransforms={mounted}\r\n        compactType={compactType}\r\n        preventCollision={!compactType}\r\n      >\r\n        {generateDOM()}\r\n      </ResponsiveReactGridLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nShowcaseLayout.defaultProps = {\r\n  className: \"layout\",\r\n  rowHeight: 30,\r\n  onLayoutChange: () => {},\r\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }\r\n};\r\n\r\nexport default ShowcaseLayout;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport ShowcaseLayout from \"./NewGrid\";\r\n\r\nconst ExampleLayout = () => {\r\n  const [layout, setLayout] = useState([]);\r\n\r\n  const onLayoutChange = useCallback((layout) => {\r\n    setLayout(layout);\r\n  }, []);\r\n\r\n  const stringifyLayout = () => {\r\n    return layout.map(function (l) {\r\n      return (\r\n        <div className=\"layoutItem\" key={l.i}>\r\n          <b>{l.i}</b>: [{l.x}, {l.y}, {l.w}, {l.h}]\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"layoutJSON\">\r\n        Displayed as <code>[x, y, w, h]</code>:\r\n        <div className=\"columns\">{stringifyLayout()}</div>\r\n      </div>\r\n      <ShowcaseLayout onLayoutChange={onLayoutChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleLayout;\r\n","import React from \"react\";\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport GridItem from \"./GridItem\";\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\nconst Grid = () => {\r\n  const layout = [\r\n    { i: \"a\", x: 0, y: 0, w: 6, h: 6 },\r\n    { i: \"b\", x: 6, y: 0, w: 6, h: 6 },\r\n    { i: \"j\", x: 6, y: 0, w: 10, h: 10 }\r\n  ];\r\n\r\n  return (\r\n    <ResponsiveGridLayout\r\n      className=\"layout\"\r\n      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n      cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n    >\r\n      {layout.map((item) => {\r\n        console.log(item);\r\n        return (\r\n          <div key={item.i}>\r\n            <GridItem width={item.w} height={item.h} x={item.x} y={item.y} />\r\n          </div>\r\n        );\r\n      })}\r\n    </ResponsiveGridLayout>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React, { useState } from \"react\";\nimport ExampleLayout from \"./ExapmleLayout\";\nimport Grid from \"./Grid\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const gridProps = window.gridProps || {};\n\n  return (\n    <div className=\"App\">\n      <ExampleLayout {...gridProps} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}